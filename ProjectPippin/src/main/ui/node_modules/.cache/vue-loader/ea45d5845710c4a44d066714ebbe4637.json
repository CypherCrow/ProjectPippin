{"remainingRequest":"C:\\Users\\Akanb\\Documents\\GitHub\\ProjectPippin\\ProjectPippin\\src\\main\\ui\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\Akanb\\Documents\\GitHub\\ProjectPippin\\ProjectPippin\\src\\main\\ui\\src\\views\\ProductCreation.vue?vue&type=style&index=0&id=350372a4&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\Akanb\\Documents\\GitHub\\ProjectPippin\\ProjectPippin\\src\\main\\ui\\src\\views\\ProductCreation.vue","mtime":1626048350958},{"path":"C:\\Users\\Akanb\\Documents\\GitHub\\ProjectPippin\\ProjectPippin\\src\\main\\ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Akanb\\Documents\\GitHub\\ProjectPippin\\ProjectPippin\\src\\main\\ui\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1624994109000},{"path":"C:\\Users\\Akanb\\Documents\\GitHub\\ProjectPippin\\ProjectPippin\\src\\main\\ui\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Akanb\\Documents\\GitHub\\ProjectPippin\\ProjectPippin\\src\\main\\ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Akanb\\Documents\\GitHub\\ProjectPippin\\ProjectPippin\\src\\main\\ui\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1624994108000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouUHJvZHVjdENyZWF0aW9uIHsNCiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyANCn0NCg0KLlBhZ2VIZWFkZXIgew0KICAgIHRleHQtYWxpZ246IGNlbnRlcjsgDQp9DQoNCmZvcm0gew0KICAgIG1hcmdpbi1sZWZ0OiAxNDBweDsgDQp9DQoNCmZvcm0gZGl2IHsNCiAgICBtYXJnaW46IDIwcHggMjBweDsgDQp9DQoNCmZvcm0gZGl2IGlucHV0IHsNCiAgICBtaW4td2lkdGg6IDEwMHB4Ow0KICAgIG1hcmdpbi1sZWZ0OiAyMHB4OyANCiAgICBtYXJnaW4tdG9wOiAxMHB4OyANCn0NCg0KLnByb2R1Y3REZXNjcmlwdGlvbiB0ZXh0YXJlYSB7DQogICAgbWluLXdpZHRoOiA1MDBweDsNCiAgICBtaW4taGVpZ2h0OiAyMzBweDsgDQogICAgbWFyZ2luOiAxMHB4IDAgMjBweCAwOw0KfQ0KDQoudGl0bGVDaGFyYWN0ZXJDb3VudCB7DQogICAgcGFkZGluZy1sZWZ0OiA0MDBweDsgDQp9DQoNCi5kZXNjcmlwdGlvbkNoYXJhY3RlckNvdW50IHsNCiAgICBwYWRkaW5nLWxlZnQ6IDQwMHB4OyANCn0NCg0KbGFiZWwgew0KICAgIGZvbnQtd2VpZ2h0OiBib2xkOw0KICAgIG1hcmdpbi1ib3R0b206IDEwcHg7IA0KfQ0K"},{"version":3,"sources":["C:\\Users\\Akanb\\Documents\\GitHub\\ProjectPippin\\ProjectPippin\\src\\main\\ui\\src\\views\\ProductCreation.vue"],"names":[],"mappings":";AAkJA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB;;AAEA,CAAC,CAAC,CAAC,EAAE;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB;;AAEA,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACrB;;AAEA,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACpB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;AACzB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB;;AAEA,CAAC,CAAC,CAAC,CAAC,EAAE;IACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACvB","file":"C:/Users/Akanb/Documents/GitHub/ProjectPippin/ProjectPippin/src/main/ui/src/views/ProductCreation.vue","sourceRoot":"","sourcesContent":["<template> \r\n\r\n    <!-- NO DUPLICATES ALLOWED --->\r\n\r\n    <div class=\"ProductCreation\">\r\n        <Header />\r\n\r\n        <div class=\"PageHeader\">\r\n            <PageHeader title=\"Upload New Product\" /> \r\n        </div> \r\n\r\n        <!-- Must need image upload ---> \r\n        <!-- Products can be promoted or demoted; two types of votes: up and down; first 100 buyers is the minimum for product to be considered\r\n            for promotion; those that voted down will have their GAS refunded -->\r\n        \r\n        <form @submit=\"formSubmit\"> \r\n            <div class=\"productName\"> <!-- Have input listeners on here -->\r\n                <label>Name</label><br/>\r\n                <input v-model=\"productName\" name=\"productName\" @keyup:enter=\"titleCharsCheck\" />\r\n\r\n                <div class=\"titleCharacterCount\"> \r\n                    <p>{{ titleCharacterCount }} / {{ TITLE_CHARS_MAX_COUNT }}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"productPrice\">\r\n                <label>Price</label><br/>\r\n                <input v-model=\"productPrice\" name=\"productPrice\" />\r\n            </div> \r\n\r\n            <div class=\"productDescription\"> <!-- Have input listeners on here -->\r\n                <label>Description: </label><br/>\r\n                <textarea v-model=\"productDescription\" name=\"productDescription\" @keyup:enter=\"descriptionCharsCheck\" />\r\n\r\n                <div class=\"descriptionCharacterCount\">\r\n                    <p>{{ descriptionCharacterCount }} / {{ DESCRIPTION_CHARS_MAX_COUNT }}</p>\r\n                </div> \r\n            </div>\r\n            \r\n            <div class=\"createProduct\">\r\n                <!-- <Button buttonName=\"Create Product\" /> -->\r\n                <input type=\"submit\" value=\"Submit New Product\" class=\"PippinButton\" />\r\n                <br/>\r\n                <p>{{ output }}</p>\r\n            </div> \r\n        </form> \r\n    </div>\r\n</template> \r\n\r\n<script>\r\n//import { api } from '@cityofzion/neon-js'\r\n\r\nimport Header from '@/components/Header.vue'\r\nimport PageHeader from '@/components/PageHeader'\r\n\r\nconst DESCRIPTION_CHARS_MAX_COUNT = 125, TITLE_CHARS_MAX_COUNT = 75;\r\n\r\nexport default {\r\n    name: 'ProductCreation',\r\n    components: {\r\n        Header, PageHeader //Button\r\n    },\r\n    data() {\r\n        return {\r\n            productName: '',\r\n            productPrice: 0.00,\r\n            productDescription: '',\r\n            titleCharacterCount: 0,\r\n            descriptionCharacterCount: 0,\r\n            DESCRIPTION_CHARS_MAX_COUNT,\r\n            TITLE_CHARS_MAX_COUNT,\r\n            output: ''\r\n        };\r\n    }, \r\n    methods: {\r\n        formSubmit(e){\r\n            e.preventDefault();\r\n\r\n            //let id = Math.floor(Math.random() * 9999)\r\n            //let idString = new Intl.NumberFormat().format(id)\r\n            //let priceString = new Intl.NumberFormat().format(this.producePrice)\r\n\r\n            if(!this.productName && !this.productPrice && !this.productDescription){\r\n                alert('Form is incomplete: Input fields are empty')\r\n                return; \r\n            }\r\n\r\n            if(!this.productName || !this.productPrice || !this.productDescription){\r\n                alert('Form is incomplete: One of the input fields are empty')\r\n                return; \r\n            }\r\n\r\n            const newProduct = {\r\n                id: Math.floor(Math.random() * 9999),\r\n                name: this.productName,\r\n                price: this.productPrice.toFixed(2),\r\n                description: this.productDescription\r\n            }\r\n\r\n            console.log(newProduct)\r\n\r\n            this.$emit('add-product', newProduct)\r\n\r\n            this.productName = ''\r\n            this.productPrice = 0.00\r\n            this.productDescription = ''\r\n\r\n            /* let count = 3            \r\n\r\n            setInterval(() => {\r\n                this.output = `Submitted! Will be redirected to store page in ${count}...`\r\n\r\n                if(count == 0){\r\n                    router.push({ path: '/store'})\r\n                }\r\n\r\n                count--\r\n\r\n            }, 1000) */\r\n            \r\n            this.$router.push({path: '/store'})\r\n        },\r\n\r\n        descriptionCharsCheck(){\r\n            if(this.descriptionCharacterCount > DESCRIPTION_CHARS_MAX_COUNT){\r\n                console.log(`Max character limit of ${DESCRIPTION_CHARS_MAX_COUNT} for description reached.`);\r\n            }\r\n            else{\r\n                this.descriptionCharacterCount++ \r\n            }      \r\n        },\r\n\r\n        titleCharsCheck(){\r\n            if(this.titleCharacterCount > TITLE_CHARS_MAX_COUNT){\r\n                console.log(`Max character limit of ${TITLE_CHARS_MAX_COUNT} for title reached.`)\r\n            }\r\n            else{\r\n                this.titleCharacterCount++ \r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.ProductCreation {\r\n    flex-direction: column; \r\n}\r\n\r\n.PageHeader {\r\n    text-align: center; \r\n}\r\n\r\nform {\r\n    margin-left: 140px; \r\n}\r\n\r\nform div {\r\n    margin: 20px 20px; \r\n}\r\n\r\nform div input {\r\n    min-width: 100px;\r\n    margin-left: 20px; \r\n    margin-top: 10px; \r\n}\r\n\r\n.productDescription textarea {\r\n    min-width: 500px;\r\n    min-height: 230px; \r\n    margin: 10px 0 20px 0;\r\n}\r\n\r\n.titleCharacterCount {\r\n    padding-left: 400px; \r\n}\r\n\r\n.descriptionCharacterCount {\r\n    padding-left: 400px; \r\n}\r\n\r\nlabel {\r\n    font-weight: bold;\r\n    margin-bottom: 10px; \r\n}\r\n</style>\r\n"]}]}